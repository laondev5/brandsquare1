// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                String             @id @default(auto()) @map("_id") @db.ObjectId
  name              String?
  email             String             @unique
  resetToken        String? // Add this line
  resetTokenExpiry  DateTime?
  password          String
  verificationToken String?
  emailVerified     DateTime?
  role              Role               @default(CUSTOMER)
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  products          Product[]
  onboarding        Boolean            @default(false)
  // New fields
  basicInfo         BasicInfo?
  contactInfo       ContactInfo?
  socialMedia       SocialMedia?
  additionalDetails AdditionalDetails?
  terms             Terms?
}

type BasicInfo {
  brandName        String?
  brandDescription String?
}

type ContactInfo {
  address    String?
  city       String?
  state      String?
  postalCode String?
  phone      String?
  email      String?
}

type SocialMedia {
  instagram String?
  facebook  String?
  twitter   String?
  linkedin  String?
  website   String?
}

type AdditionalDetails {
  operatingHours   String?
  businessCategory String?
  taxId            String?
}

type Terms {
  agreedToTerms Boolean @default(false)
}

enum Role {
  ADMIN
  VENDOR
  CUSTOMER
}

model Product {
  id               String          @id @default(auto()) @map("_id") @db.ObjectId
  name             String
  price            Float
  isFree           Boolean         @default(false)
  shortDescription String
  fullDescription  String
  category         String
  sizes            Size[]
  colors           Color[]
  inventory        InventoryItem[]
  displayImage     String
  galleryImages    GalleryImage[]
  coupons          Coupon[]
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
  userId           String          @db.ObjectId
  user             User            @relation(fields: [userId], references: [id], onDelete: Cascade)
}

type Size {
  name String
}

type Color {
  name String
}

type InventoryItem {
  size     String
  quantity Int
}

type GalleryImage {
  url String
}

type Coupon {
  code     String
  discount Float
}
